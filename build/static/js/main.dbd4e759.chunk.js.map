{"version":3,"sources":["components/loader/loader.js","containers/url-viewer/url-viewer.js","containers/url-checker/url-checker.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","loading","className","role","SCRIPT_REGEX","UrlViewer","url","useState","setLoading","htmlDoc","setHtmlDoc","useEffect","fetch","then","response","text","string","catch","err","console","log","fetchPage","dangerouslySetInnerHTML","__html","replace","URL_REGEX","HTTP_REGEX","UrlChecker","setText","urls","setUrls","detectUrl","str","normalizedUrls","match","map","normalizeUrl","type","id","value","onChange","e","target","length","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAiBeA,G,MAdA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACb,OACI,mCAEQA,GAAW,qBAAKC,UAAU,cAAf,SACP,qBAAKA,UAAU,8BAA8BC,KAAK,SAAlD,SACI,sBAAMD,UAAU,UAAhB,gCCLlBE,G,MAAe,uDAoCNC,EAlCG,SAAC,GAAW,IAAVC,EAAS,EAATA,IAAS,EAEKC,oBAAS,GAFd,mBAElBN,EAFkB,KAETO,EAFS,OAGKD,mBAAS,MAHd,mBAGlBE,EAHkB,KAGTC,EAHS,KAsBzB,OAJAC,qBAAU,YAbQ,SAAAL,GACdE,GAAW,GACXI,MAAMN,GAAKO,MAAK,SAAAC,GACZ,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJR,GAAW,GACXE,EAAWM,MACZC,OAAM,SAAAC,GACLV,GAAW,GACXW,QAAQC,IAAI,cAAeF,MAK/BG,CAAUf,KACX,CAACA,IAGA,mCACI,sBAAKJ,UAAU,0CAAf,UACI,cAAC,EAAD,CAAQD,QAASA,MACdQ,GAAW,qBACVa,wBAAyB,CAAEC,OAAQd,EAAQe,QAAQpB,EAAc,aC5B/EqB,G,MAAY,sCACZC,EAAa,iBAiDJC,EA/CI,WAAO,IAAD,EAEGpB,mBAAS,IAFZ,mBAEdQ,EAFc,KAERa,EAFQ,OAGGrB,mBAAS,IAHZ,mBAGdsB,EAHc,KAGRC,EAHQ,KAKrBnB,qBAAU,WACNoB,EAAUhB,KACX,CAACA,IAEJJ,qBAAU,WACNQ,QAAQC,IAAI,OAAQS,KACrB,CAACA,IAEJ,IAKME,EAAY,SAACC,GACf,IACMC,GADUD,EAAIE,MAAMT,IAAc,IACTU,KAAI,SAAA7B,GAAG,OAPrB,SAAAA,GACjB,OAAIA,EAAI4B,MAAMR,GACPpB,EAD2B,WAAWA,EAMH8B,CAAa9B,MACvDwB,EAAQG,IAGZ,OACI,sBAAK/B,UAAU,wBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,iDACA,qBAAKA,UAAU,aAAf,SACI,uBACImC,KAAK,OACLnC,UAAU,eACVoC,GAAG,aACHC,MAAOxB,EACPyB,SAAW,SAAAC,GAAC,OAAIb,EAAQa,EAAEC,OAAOH,eAI7C,qBAAKrC,UAAU,6BAAf,WAEU2B,EAAKc,QAAUd,EAAKM,KAAI,SAAC7B,EAAKsC,GAAN,OAAgB,cAAC,EAAD,CAAuBtC,IAAKA,GAAZsC,YCrC/DC,MARf,WACE,OACE,qBAAK3C,UAAU,MAAf,SACE,cAAC,EAAD,OCMS4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbd4e759.chunk.js","sourcesContent":["import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = ({loading}) => {\r\n    return(\r\n        <>\r\n            {\r\n                loading && <div className=\"loader-wrap\">\r\n                    <div className=\"spinner-border text-primary\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useEffect, useState} from 'react';\r\nimport Loader from \"../../components/loader/loader\";\r\nimport './url-viewer.css';\r\n\r\nconst SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\r\n\r\nconst UrlViewer = ({url}) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [htmlDoc, setHtmlDoc] = useState(null);\r\n\r\n    const fetchPage = url => {\r\n        setLoading(true);\r\n        fetch(url).then(response => {\r\n            return response.text();\r\n        }).then(string => {\r\n            setLoading(false);\r\n            setHtmlDoc(string)\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            console.log('Fetch Error', err);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPage(url);\r\n    }, [url]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"url-viewer shadow mb-5 bg-white rounded\">\r\n                <Loader loading={loading} />\r\n                {!!htmlDoc && <div\r\n                    dangerouslySetInnerHTML={{ __html: htmlDoc.replace(SCRIPT_REGEX, '')}} />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UrlViewer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport UrlViewer from \"../url-viewer/url-viewer\";\r\n\r\nimport './view-checker.css'\r\n\r\nconst URL_REGEX = /\\b(https?::?\\/\\/)?\\S+\\.\\S+[^\\W]+/gi;\r\nconst HTTP_REGEX = /^https?::?\\/\\//;\r\n\r\nconst UrlChecker = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [urls, setUrls] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        detectUrl(text);\r\n    }, [text]);\r\n\r\n    useEffect(()=>{\r\n        console.log('urls', urls);\r\n    }, [urls]);\r\n\r\n    const normalizeUrl = url => {\r\n        if(!url.match(HTTP_REGEX)) return 'https://'+url;\r\n        return url;\r\n    }\r\n\r\n    const detectUrl = (str) => {\r\n        const newUrls = str.match(URL_REGEX) || [];\r\n        const normalizedUrls = newUrls.map(url => normalizeUrl(url));\r\n        setUrls(normalizedUrls);\r\n    }\r\n\r\n    return(\r\n        <div className=\"url-view-wrapper py-3\">\r\n            <div className=\"container mb-3\">\r\n                <h2>Share your link</h2>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"linkString\"\r\n                        value={text}\r\n                        onChange={ e => setText(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"container url-viewers-list\">\r\n                {\r\n                    !!urls.length && urls.map((url, index) => <UrlViewer key={index} url={url} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UrlChecker;\r\n","import './App.css';\nimport UrlChecker from './containers/url-checker/url-checker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UrlChecker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}